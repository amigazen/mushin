#ifndef INLINE_MUIMASTER_H
#define INLINE_MUIMASTER_H

/*
** GCC format inline files.
**
**
** Generated by LibDescConverter from an sfd file
*/

/* "muimaster.library" */
#define MUI_NewObjectA(classname, tags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register CONST_STRPTR p0 __asm("a0") = (classname);   \
	register struct TagItem *p1 __asm("a1") = (tags);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-30:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#ifndef NO_INLINE_STDARG
#define MUI_NewObject(classname, tags...)    \
({  \
	ULONG _tags[] = {tags};   \
	MUI_NewObjectA((classname), _tags);   \
	r;   \
})
#endif

#define MUI_DisposeObject(obj)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register Object *p0 __asm("a0") = (obj);   \
	__asm volatile ("jsr a6@(-36:W);" : "+r"(b), "=r"(r) : "r"(p0) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_RequestA(app, win, flags, title, gadgets, format, params)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register APTR p0 __asm("d0") = (app);   \
	register APTR p1 __asm("d1") = (win);   \
	register LONGBITS p2 __asm("d2") = (flags);   \
	register CONST_STRPTR p3 __asm("a0") = (title);   \
	register CONST_STRPTR p4 __asm("a1") = (gadgets);   \
	register CONST_STRPTR p5 __asm("a2") = (format);   \
	register APTR p6 __asm("a3") = (params);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-42:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1), "r"(p2), "r"(p3), "r"(p4), "r"(p5), "r"(p6) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#ifndef NO_INLINE_STDARG
#define MUI_Request(app, win, flags, title, gadgets, format, tags...)    \
({  \
	ULONG _tags[] = {tags};   \
	MUI_RequestA((app), (win), (flags), (title), (gadgets), (format), _tags);   \
	r;   \
})
#endif

#define MUI_AllocAslRequest(reqType, tagList)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register ULONG p0 __asm("d0") = (reqType);   \
	register struct TagItem *p1 __asm("a0") = (tagList);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-48:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#ifndef NO_INLINE_STDARG
#define MUI_AllocAslRequestTags(reqType, tags...)    \
({  \
	ULONG _tags[] = {tags};   \
	MUI_AllocAslRequest((reqType), _tags);   \
	r;   \
})
#endif

#define MUI_AslRequest(requester, tagList)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register APTR p0 __asm("a0") = (requester);   \
	register struct TagItem *p1 __asm("a1") = (tagList);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-54:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#ifndef NO_INLINE_STDARG
#define MUI_AslRequestTags(requester, tags...)    \
({  \
	ULONG _tags[] = {tags};   \
	MUI_AslRequest((requester), _tags);   \
	r;   \
})
#endif

#define MUI_FreeAslRequest(requester)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register APTR p0 __asm("a0") = (requester);   \
	__asm volatile ("jsr a6@(-60:W);" : "+r"(b), "=r"(r) : "r"(p0) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_Error()    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-66:W);" : "+r"(b), "=r"(r) :  : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_SetError(num)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register LONG p0 __asm("d0") = (num);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-72:W);" : "+r"(b), "=r"(r) : "r"(p0) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_GetClass(classname)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register CONST_STRPTR p0 __asm("a0") = (classname);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-78:W);" : "+r"(b), "=r"(r) : "r"(p0) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_FreeClass(classptr)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct IClass *p0 __asm("a0") = (classptr);   \
	__asm volatile ("jsr a6@(-84:W);" : "+r"(b), "=r"(r) : "r"(p0) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_RequestIDCMP(obj, flags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register Object *p0 __asm("a0") = (obj);   \
	register ULONG p1 __asm("d0") = (flags);   \
	__asm volatile ("jsr a6@(-90:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_RejectIDCMP(obj, flags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register Object *p0 __asm("a0") = (obj);   \
	register ULONG p1 __asm("d0") = (flags);   \
	__asm volatile ("jsr a6@(-96:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_Redraw(obj, flags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register Object *p0 __asm("a0") = (obj);   \
	register ULONG p1 __asm("d0") = (flags);   \
	__asm volatile ("jsr a6@(-102:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_CreateCustomClass(base, supername, supermcc, datasize, dispatcher)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct Library *p0 __asm("a0") = (base);   \
	register CONST_STRPTR p1 __asm("a1") = (supername);   \
	register struct MUI_CustomClass *p2 __asm("a2") = (supermcc);   \
	register ULONG p3 __asm("d0") = (datasize);   \
	register APTR p4 __asm("a3") = (dispatcher);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-108:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1), "r"(p2), "r"(p3), "r"(p4) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_DeleteCustomClass(mcc)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_CustomClass *p0 __asm("a0") = (mcc);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-114:W);" : "+r"(b), "=r"(r) : "r"(p0) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_MakeObjectA(type, params)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register LONG p0 __asm("d0") = (type);   \
	register IPTR *p1 __asm("a0") = (params);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-120:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#ifndef NO_INLINE_STDARG
#define MUI_MakeObject(type, tags...)    \
({  \
	ULONG _tags[] = {tags};   \
	MUI_MakeObjectA((type), _tags);   \
	r;   \
})
#endif

#define MUI_Layout(obj, left, top, width, height, flags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register Object *p0 __asm("a0") = (obj);   \
	register LONG p1 __asm("d0") = (left);   \
	register LONG p2 __asm("d1") = (top);   \
	register LONG p3 __asm("d2") = (width);   \
	register LONG p4 __asm("d3") = (height);   \
	register ULONG p5 __asm("d4") = (flags);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-126:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1), "r"(p2), "r"(p3), "r"(p4), "r"(p5) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_ObtainPen(mri, spec, flags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register struct MUI_PenSpec *p1 __asm("a1") = (spec);   \
	register ULONG p2 __asm("d0") = (flags);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-156:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1), "r"(p2) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_ReleasePen(mri, pen)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register LONG p1 __asm("d0") = (pen);   \
	__asm volatile ("jsr a6@(-162:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_AddClipping(mri, left, top, width, height)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register WORD p1 __asm("d0") = (left);   \
	register WORD p2 __asm("d1") = (top);   \
	register WORD p3 __asm("d2") = (width);   \
	register WORD p4 __asm("d3") = (height);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-168:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1), "r"(p2), "r"(p3), "r"(p4) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_RemoveClipping(mri, handle)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register APTR p1 __asm("a1") = (handle);   \
	__asm volatile ("jsr a6@(-174:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_AddClipRegion(mri, r)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register struct Region *p1 __asm("a1") = (r);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-180:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_RemoveClipRegion(mri, handle)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register APTR p1 __asm("a1") = (handle);   \
	__asm volatile ("jsr a6@(-186:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})

#define MUI_BeginRefresh(mri, flags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register ULONG p1 __asm("d0") = (flags);   \
	register APTR r __asm("d0");   \
	__asm volatile ("jsr a6@(-192:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
	r;   \
})

#define MUI_EndRefresh(mri, flags)    \
({  \
	register void *b __asm("a6") = MUIMasterBase;  \
	register struct MUI_RenderInfo *p0 __asm("a0") = (mri);   \
	register ULONG p1 __asm("d0") = (flags);   \
	__asm volatile ("jsr a6@(-198:W);" : "+r"(b), "=r"(r) : "r"(p0), "r"(p1) : "d0", "d1", "a0", "a1", "fp0", "fp1", "cc", "memory");    \
})


#endif /* INLINE_MUIMASTER_H */
