#ifndef CLIB_MUIMASTER_PROTOS_H
#define CLIB_MUIMASTER_PROTOS_H

/*
** 'C' prototypes. For use with 32 bit integers only.
**
**
** Generated by LibDescConverter from an sfd file
*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef INTUITION_CLASSES_H
#include <intuition/classes.h>
#endif
#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif
#ifndef LIBRARIES_MUI_H
#include <libraries/mui.h>
#endif

/* "muimaster.library"*/
Object *MUI_NewObjectA(CONST_STRPTR classname, struct TagItem *tags);
Object *MUI_NewObject(CONST_STRPTR classname, ...);
void MUI_DisposeObject(Object *obj);
LONG MUI_RequestA(APTR app, APTR win, LONGBITS flags, CONST_STRPTR title, CONST_STRPTR gadgets, CONST_STRPTR format, APTR params);
LONG MUI_Request(APTR app, APTR win, LONGBITS flags, CONST_STRPTR title, CONST_STRPTR gadgets, CONST_STRPTR format, ...);
APTR MUI_AllocAslRequest(ULONG reqType, struct TagItem *tagList);
APTR MUI_AllocAslRequestTags(ULONG reqType, ...);
BOOL MUI_AslRequest(APTR requester, struct TagItem *tagList);
BOOL MUI_AslRequestTags(APTR requester, ...);
void MUI_FreeAslRequest(APTR requester);
LONG MUI_Error(void);
LONG MUI_SetError(LONG num);
struct IClass *MUI_GetClass(CONST_STRPTR classname);
void MUI_FreeClass(struct IClass *classptr);
void MUI_RequestIDCMP(Object *obj, ULONG flags);
void MUI_RejectIDCMP(Object *obj, ULONG flags);
void MUI_Redraw(Object *obj, ULONG flags);
struct MUI_CustomClass *MUI_CreateCustomClass(struct Library *base, CONST_STRPTR supername, struct MUI_CustomClass *supermcc, ULONG datasize, APTR dispatcher);
BOOL MUI_DeleteCustomClass(struct MUI_CustomClass *mcc);
Object *MUI_MakeObjectA(LONG type, IPTR *params);
Object *MUI_MakeObject(LONG type, ...);
BOOL MUI_Layout(Object *obj, LONG left, LONG top, LONG width, LONG height, ULONG flags);
LONG MUI_ObtainPen(struct MUI_RenderInfo *mri, struct MUI_PenSpec *spec, ULONG flags);
void MUI_ReleasePen(struct MUI_RenderInfo *mri, LONG pen);
APTR MUI_AddClipping(struct MUI_RenderInfo *mri, WORD left, WORD top, WORD width, WORD height);
void MUI_RemoveClipping(struct MUI_RenderInfo *mri, APTR handle);
APTR MUI_AddClipRegion(struct MUI_RenderInfo *mri, struct Region *r);
void MUI_RemoveClipRegion(struct MUI_RenderInfo *mri, APTR handle);
BOOL MUI_BeginRefresh(struct MUI_RenderInfo *mri, ULONG flags);
void MUI_EndRefresh(struct MUI_RenderInfo *mri, ULONG flags);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* CLIB_MUIMASTER_PROTOS_H */
